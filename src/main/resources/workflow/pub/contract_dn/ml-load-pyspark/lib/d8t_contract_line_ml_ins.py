from pyspark import SparkConf, SparkContext, SQLContext 
from pyspark.sql import SparkSession, HiveContext 
import sys 
import logging 
import db_params

class d8tcontractlinemlinssql:

    def __init__(self, sparkSession1):
        global sparkSession
        sparkSession = sparkSession1

    def execute(self):
        counter = 0
        try:

            counter = counter + 1
            print("Running query number: " + str(counter))
            #Original Query:
            """
            """
            sparkSession.sql("""with QQ1 as (select max(edl_ingest_time) as max_time from trans_cfocontroller_erp_okc_erpprod.okc_k_lines_b) insert overwrite table """ + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_CONTRACT_LINE_ML_time select end_tm,max_time from """ + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_CONTRACT_LINE_ML_time inner join QQ1 on 1=1""")

            counter = counter + 1
            print("Running query number: " + str(counter))
            #Original Query:
            """
                DELETE FROM ${TTMMPPDDBB}.${AAPPLLIIDD1EENNVV}_contract_line_ml
            """
            sparkSession.sql("""        TRUNCATE TABLE   """ + db_params.TTMMPPDDBB + """.""" + db_params.AAPPLLIIDD1EENNVV + """_contract_line_ml""")

            counter = counter + 1
            print("Running query number: " + str(counter))
            #Original Query:
            """
                INSERT INTO ${TTMMPPDDBB}.${AAPPLLIIDD1EENNVV}_contract_line_ml(                    contract_line_id,          instance_id,          alt_contract_header_id,          as_of_date_time,          batch_nbr,          config_complete_flag,          config_header_id,          config_item_id,          config_item_type_code,          config_revision_nbr,          config_valid_flag,          contract_header_id,          contract_line_nbr,          contract_line_style_id,          contract_price_type_code,          created_by_name,          creation_date_time,          curr_code,          display_sequence_nbr,          end_date_time,          exception_flag,          hidden_line_flag,          invoice_line_level_flag,          item_to_price_flag,          last_update_date_time,          last_update_login_name,          last_updated_by_name,          line_list_price_amt_ent,          negot_price_amt_ent,          negot_renew_price_amt_ent,          next_day_response_flag,          orig_sys_id,          orig_sys_ref_id,          orig_sys_source_code,          parent_contract_line_id,          price_basis_flag,          price_hold_adjust_est_pct,          price_hold_amt_ent,          price_hold_break_code,          price_hold_enfrc_list_flag,          price_hold_intgrtd_flag,          price_hold_list_ref_id,          price_hold_prchs_min_amt_ent,          price_hold_prchs_min_qty,          price_hold_price_type_code,          price_level_flag,          price_list_header_id,          price_list_line_id,          pricing_date_time,          renew_contract_line_id,          renew_curr_code,          renew_date_time,          renew_to_contract_line_id,          sot_order_sot_line_nbr,          start_date_time,          status_code,          template_used_name,          termination_code,          termination_date_time,          termination_reason_code,          top_model_contract_line_id,          tran_code,          unit_price_amt_ent,          unit_price_pct,          upg_orig_sys_ref_id,          upg_orig_sys_ref_name,          warranty_exp_reason_code,          bill_to_site_use_id,          cust_acct_id,          invoice_rule_id,          line_renewal_type_code,          ship_to_site_use_id,          holiday_coverage_code,          orig_serviced_qty,          reverse_logistics_text,          routing_comment_text,          source_location_name,          legacy_d1_severity_code           ,                           crb_invoice_nbr_text,        crb_reference_nbr_text                                                     )SELECT           contract_line_id,          instance_id,          alt_contract_header_id,          as_of_date_time,          batch_nbr,          config_complete_flag,          config_header_id,          config_item_id,          config_item_type_code,          config_revision_nbr,          config_valid_flag,          contract_header_id,          contract_line_nbr,          contract_line_style_id,          contract_price_type_code,          created_by_name,          creation_date_time,          curr_code,          display_sequence_nbr,          end_date_time,          exception_flag,          hidden_line_flag,          invoice_line_level_flag,          item_to_price_flag,          last_update_date_time,          last_update_login_name,          last_updated_by_name,          line_list_price_amt_ent,          negot_price_amt_ent,          negot_renew_price_amt_ent,          next_day_response_flag,          orig_sys_id,          orig_sys_ref_id,          orig_sys_source_code,          parent_contract_line_id,          price_basis_flag,          price_hold_adjust_est_pct,          price_hold_amt_ent,          price_hold_break_code,          price_hold_enfrc_list_flag,          price_hold_intgrtd_flag,          price_hold_list_ref_id,          price_hold_prchs_min_amt_ent,          price_hold_prchs_min_qty,          price_hold_price_type_code,          price_level_flag,          price_list_header_id,          price_list_line_id,          pricing_date_time,          renew_contract_line_id,          renew_curr_code,          renew_date_time,          renew_to_contract_line_id,          sot_order_sot_line_nbr,          start_date_time,          status_code,          template_used_name,          termination_code,          termination_date_time,          termination_reason_code,          top_model_contract_line_id,          tran_code,          unit_price_amt_ent,          unit_price_pct,          upg_orig_sys_ref_id,          upg_orig_sys_ref_name,          warranty_exp_reason_code,          bill_to_site_use_id,          cust_acct_id,          invoice_rule_id,          line_renewal_type_code,          ship_to_site_use_id,          holiday_coverage_code,          orig_serviced_qty,          reverse_logistics_text,          routing_comment_text,          source_location_name,          legacy_d1_severity_code,          reverse_logistics_text, <WM_COMMENT_START>:f_attribute2<WM_COMMENT_END>          routing_comment_text    <WM_COMMENT_START>:f_attribute1<WM_COMMENT_END>                                                                                             FROM ${EEDDWWDDBB}.${AAPPLLIIDD1}_CONTRACT_LINE_INT EDW1, ${EEDDWWDDBB}.d8_cfs_time EDW2WHERE EDW1.crt_date_time>EDW2.min_timestamp and EDW1.crt_date_time<= EDW2.max_timestampand EDW2.tablename='${AAPPLLIIDD1EENNVV}_contract_line_ml'
            """
            sparkSession.sql("""insert into """ + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_CONTRACT_LINE_ML select tb1.ID, tb1.instance_id, tb1.DNZ_CHR_ID, tb1.as_of_date_time , tb1.batch_nbr, tb1.CONFIG_COMPLETE_YN, tb1.CONFIG_HEADER_ID, tb1.CONFIG_ITEM_ID, tb1.CONFIG_ITEM_TYPE, tb1.CONFIG_REVISION_NUMBER, tb1.CONFIG_VALID_YN, tb1.CHR_ID, tb1.LINE_NUMBER, tb1.LSE_ID, tb1.PRICE_TYPE, coalesce(hb1.USER_NAME,'UNKNOWN') as CREATED_BY_Name, tb1.CREATION_DATE, tb1.CURRENCY_CODE, tb1.DISPLAY_SEQUENCE, tb1.END_DATE, tb1.EXCEPTION_YN, tb1.HIDDEN_IND, tb1.INVOICE_LINE_LEVEL_IND, tb1.ITEM_TO_PRICE_YN, tb1.LAST_UPDATE_DATE, 'UNKNOWN' as last_update_login_name, coalesce(hb2.USER_NAME,'UNKNOWN') as last_updated_by_name,bround(tb1.LINE_LIST_PRICE,4), bround(tb1.PRICE_NEGOTIATED,4), bround(tb1.PRICE_NEGOTIATED_RENEWED,4), tb1.ATTRIBUTE12, tb1.ORIG_SYSTEM_ID1, tb1.ORIG_SYSTEM_REFERENCE1, tb1.ORIG_SYSTEM_SOURCE_CODE, tb1.CLE_ID, tb1.PRICE_BASIS_YN, bround(tb1.PH_ADJUSTMENT,10), bround(tb1.PH_VALUE,4), tb1.PH_PRICE_BREAK_BASIS, tb1.PH_ENFORCE_PRICE_LIST_YN, tb1.PH_INTEGRATED_WITH_QP, tb1.PH_QP_REFERENCE_ID, bround(tb1.PH_MIN_AMT,4), bround(tb1.PH_MIN_QTY,4), tb1.PH_PRICING_TYPE, tb1.PRICE_LEVEL_IND, tb1.PRICE_LIST_ID, tb1.PRICE_LIST_LINE_ID, tb1.PRICING_DATE, tb1.CLE_ID_RENEWED, tb1.CURRENCY_CODE_RENEWED, tb1.DATE_RENEWED, tb1.CLE_ID_RENEWED_TO, tb1.ATTRIBUTE14, tb1.START_DATE, tb1.STS_CODE, tb1.TEMPLATE_USED, tb1.TRN_CODE, tb1.DATE_TERMINATED, tb1.ATTRIBUTE13, tb1.CONFIG_TOP_MODEL_LINE_ID, tb1.tran_code, bround(tb1.PRICE_UNIT,4), tb1.PRICE_UNIT_PERCENT, tb1.UPG_ORIG_SYSTEM_REF_ID, tb1.UPG_ORIG_SYSTEM_REF, tb1.ATTRIBUTE5, tb1.BILL_TO_SITE_USE_ID, tb1.CUST_ACCT_ID, tb1.INV_RULE_ID, tb1.LINE_RENEWAL_TYPE_CODE, tb1.SHIP_TO_SITE_USE_ID, tb1.ATTRIBUTE11, tb1.ATTRIBUTE10, tb1.ATTRIBUTE2, tb1.ATTRIBUTE1, tb1.ATTRIBUTE3, tb1.ATTRIBUTE7, tb1.crb_invoice_nbr_text, tb1.crb_reference_nbr_text, tb1.mdm_product_identifier, tb1.mdm_solution_identifier from (select """ + db_params.btch_nbr + """ as batch_nbr,from_unixtime(unix_timestamp(DTL__CAPXTIMESTAMP, 'yyyyMMddHHmmssSSSSSS'),'yyyy-MM-dd HH:mm:ss') as as_of_date_time ,dtl__capxaction as tran_code,ID,LINE_NUMBER,CHR_ID,CLE_ID,CLE_ID_RENEWED,DNZ_CHR_ID,DISPLAY_SEQUENCE,STS_CODE,TRN_CODE,LSE_ID,EXCEPTION_YN,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE,HIDDEN_IND,PRICE_NEGOTIATED,PRICE_LEVEL_IND,PRICE_UNIT,PRICE_UNIT_PERCENT,INVOICE_LINE_LEVEL_IND,TEMPLATE_USED,PRICE_TYPE,CURRENCY_CODE,LAST_UPDATE_LOGIN,DATE_TERMINATED,START_DATE,END_DATE,ATTRIBUTE1,ATTRIBUTE2,ATTRIBUTE3,ATTRIBUTE5,ATTRIBUTE7,ATTRIBUTE10,ATTRIBUTE11,ATTRIBUTE12,ATTRIBUTE13,ATTRIBUTE14,CLE_ID_RENEWED_TO,PRICE_NEGOTIATED_RENEWED,CURRENCY_CODE_RENEWED,UPG_ORIG_SYSTEM_REF,UPG_ORIG_SYSTEM_REF_ID,DATE_RENEWED,ORIG_SYSTEM_SOURCE_CODE,ORIG_SYSTEM_ID1,ORIG_SYSTEM_REFERENCE1,PRICE_LIST_ID,PRICE_LIST_LINE_ID,LINE_LIST_PRICE,ITEM_TO_PRICE_YN,PRICING_DATE,PRICE_BASIS_YN,CONFIG_HEADER_ID,CONFIG_REVISION_NUMBER,CONFIG_COMPLETE_YN,CONFIG_VALID_YN,CONFIG_TOP_MODEL_LINE_ID,CONFIG_ITEM_TYPE,CONFIG_ITEM_ID,PH_PRICING_TYPE,PH_PRICE_BREAK_BASIS,PH_MIN_QTY,PH_MIN_AMT,PH_QP_REFERENCE_ID,PH_VALUE,PH_ENFORCE_PRICE_LIST_YN,PH_ADJUSTMENT,PH_INTEGRATED_WITH_QP,CUST_ACCT_ID,BILL_TO_SITE_USE_ID,INV_RULE_ID,LINE_RENEWAL_TYPE_CODE,SHIP_TO_SITE_USE_ID,8001 as instance_id,coalesce(ATTRIBUTE2,'') as crb_invoice_nbr_text,coalesce(ATTRIBUTE1,'') as crb_reference_nbr_text, CASE WHEN coalesce(LSE_ID,0) =1 THEN coalesce(ATTRIBUTE1,'') ELSE '' END as mdm_product_identifier,CASE WHEN coalesce(LSE_ID,0) =1 THEN coalesce(ATTRIBUTE2,'') ELSE '' END as mdm_solution_identifier, row_number() over (partition by ID order by DTL__CAPXTIMESTAMP desc,edl_record_sequence desc) as rnk from trans_cfocontroller_erp_okc_erpprod.okc_k_lines_b,""" + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_contract_line_ml_time QQ1 where edl_ingest_time > QQ1.start_tm and edl_ingest_time <= QQ1.end_tm)tb1 LEFT OUTER JOIN hub_common.HUB_REF_FND_USER hb1 on hb1.USER_ID = tb1.CREATED_BY LEFT OUTER JOIN hub_common.HUB_REF_FND_USER hb2 on hb2.USER_ID = tb1. LAST_UPDATED_BY WHERE tb1.rnk=1 """)

        except:
            raise Exception("Error while executing query number {} in the job '{}'.".format(str(counter), "d8tcontractlinemlinssql"))
        finally:
            print("Execution complete for job 'd8tcontractlinemlinssql'.")

def main():
    m = d8tcontractlinemlinssql(sparkSession)
    m.execute()

if __name__ == '__main__':
    global sparkSession
    sparkSession = SparkSession.builder.appName("d8tcontractlinemlinssql").enableHiveSupport().getOrCreate()
    main()