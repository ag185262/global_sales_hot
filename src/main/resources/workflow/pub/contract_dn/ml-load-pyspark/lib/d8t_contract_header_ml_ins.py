from pyspark import SparkConf, SparkContext, SQLContext 
from pyspark.sql import SparkSession, HiveContext 
import sys 
import logging 
import db_params

class d8tcontractheadermlinssql:

    def __init__(self, sparkSession1):
        global sparkSession
        sparkSession = sparkSession1

    def execute(self):
        counter = 0
        try:

            counter = counter + 1
            print("Running query number: " + str(counter))
            #Original Query:
            """
            """
            sparkSession.sql("""with QQ1 as (select max(edl_ingest_time) as max_time from trans_cfocontroller_erp_okc_erpprod.okc_k_headers_all_b) insert overwrite table """ + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_CONTRACT_HEADER_ML_time select end_tm,max_time from """ + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_CONTRACT_HEADER_ML_time inner join QQ1 on 1=1""")

            counter = counter + 1
            print("Running query number: " + str(counter))
            #Original Query:
            """
                DELETE FROM ${TTMMPPDDBB}.${AAPPLLIIDD1EENNVV}_contract_header_ml
            """
            sparkSession.sql("""    TRUNCATE TABLE   """ + db_params.TTMMPPDDBB + """.""" + db_params.AAPPLLIIDD1EENNVV + """_contract_header_ml""")

            counter = counter + 1
            print("Running query number: " + str(counter))
            #Original Query:
            """
                INSERT INTO ${TTMMPPDDBB}.${AAPPLLIIDD1EENNVV}_contract_header_ml(                    contract_header_id,          instance_id,          approved_date_time,          archived_flag,          as_of_date_time,          author_ncr_unit_id,          author_operating_unit_id,          auto_renew_day_cnt,          award_contract_header_id,          batch_nbr,          cancelled_date_time,          character_type_code,          contract_est_amt_ent,          contract_intent_code,          contract_nbr,          contract_nbr_modifier,          contract_subtype_code,          created_by_name,          creation_date_time,          curr_code,          cust_po_nbr,          cust_po_nbr_rqrd_flag,          deleted_flag,          end_date_time,          est_renew_amt_ent,          gsa_code,          inventory_org_id,          issue_receive_code,          issued_date_time,          keep_on_mail_list_flag,          last_update_date_time,          last_update_login_name,          last_updated_by_name,          migration_contract_nbr,          orig_sys_id,          orig_sys_ref_id,          orig_sys_source_code,          prepay_rqrd_flag,          price_list_header_id,          pricing_date_time,          projtd_close_date_time,          proposed_date_time,          qa_check_list_id,          renew_contract_header_id,          renew_curr_code,          renew_date_time,          renew_to_contract_header_id,          resolved_until_date_time,          resp_contract_header_id,          respond_date_time,          response_rqrd_copy_nbr,          set_aside_pct,          sign_by_date_time,          signed_date_time,          solution_portfolio_id,          start_date_time,          status_code,          subclass_code,          template_flag,          template_used_name,          termination_code,          termination_date_time,          termination_reason_code,          total_list_price_amt_ent,          tran_code,          upg_orig_sys_ref_id,          upg_orig_sys_ref_name,          user_estimated_amt_ent,          agreement_record_id,          final_price_modifier_text,          invoice_zero_amt_flag,          bill_to_site_use_id,          curr_cnvrsn_rate,          curr_cnvrsn_rate_date,          curr_cnvrsn_type_code,          document_id,          invoice_rule_id,          invoice_term_id,          renewal_end_date,          renewal_type_code,          ship_to_site_use_id,          new_for_new_duration,          renewal_approval_type,          suspend_credits_flag                                                     )SELECT           contract_header_id,          instance_id,          approved_date_time,          archived_flag,          as_of_date_time,          author_ncr_unit_id,          author_operating_unit_id,          auto_renew_day_cnt,          award_contract_header_id,          batch_nbr,          cancelled_date_time,          character_type_code,          contract_est_amt_ent,          contract_intent_code,          contract_nbr,          contract_nbr_modifier,          contract_subtype_code,          created_by_name,          creation_date_time,          curr_code,          cust_po_nbr,          cust_po_nbr_rqrd_flag,          deleted_flag,          end_date_time,          est_renew_amt_ent,          gsa_code,          inventory_org_id,          issue_receive_code,          issued_date_time,          keep_on_mail_list_flag,          last_update_date_time,          last_update_login_name,          last_updated_by_name,          migration_contract_nbr,          orig_sys_id,          orig_sys_ref_id,          orig_sys_source_code,          prepay_rqrd_flag,          price_list_header_id,          pricing_date_time,          projtd_close_date_time,          proposed_date_time,          qa_check_list_id,          renew_contract_header_id,          renew_curr_code,          renew_date_time,          renew_to_contract_header_id,          resolved_until_date_time,          resp_contract_header_id,          respond_date_time,          response_rqrd_copy_nbr,          set_aside_pct,          sign_by_date_time,          signed_date_time,          solution_portfolio_id,          start_date_time,          status_code,          subclass_code,          template_flag,          template_used_name,          termination_code,          termination_date_time,          termination_reason_code,          total_list_price_amt_ent,          tran_code,          upg_orig_sys_ref_id,          upg_orig_sys_ref_name,          user_estimated_amt_ent,          agreement_record_id,          final_price_modifier_text,          invoice_zero_amt_flag,          bill_to_site_use_id,          curr_cnvrsn_rate,          curr_cnvrsn_rate_date,          curr_cnvrsn_type_code,          document_id,          invoice_rule_id,          invoice_term_id,          renewal_end_date,          renewal_type_code,          ship_to_site_use_id,          new_for_new_duration,          renewal_approval_type,          suspend_Credits                                               FROM ${EEDDWWDDBB}.${AAPPLLIIDD1}_CONTRACT_HEADER_INT EDW1, ${EEDDWWDDBB}.d8_cfs_time EDW2WHERE EDW1.crt_date_time>EDW2.min_timestamp and EDW1.crt_date_time<= EDW2.max_timestampand EDW2.tablename='${AAPPLLIIDD1EENNVV}_contract_header_ml'
            """
            sparkSession.sql("""WITH QQ2 as (select distinct organization_id,attribute20 from trans_hr_erp_hr_erpprod.hr_all_organization_units) insert into """ + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_CONTRACT_HEADER_ML select ID, '8001', DATE_APPROVED, ARCHIVED_YN, from_unixtime(unix_timestamp(tb1.DTL__CAPXTIMESTAMP, 'yyyyMMddHHmmssSSSSSS'),'yyyy-MM-dd HH:mm:ss'), QQ2.attribute20, AUTHORING_ORG_ID, AUTO_RENEW_DAYS, CHR_ID_AWARD, """ + db_params.btch_nbr + """, DATETIME_CANCELLED, CHR_TYPE, bround(ESTIMATED_AMOUNT,4), BUY_OR_SELL, CONTRACT_NUMBER, CONTRACT_NUMBER_MODIFIER, coalesce(ATTRIBUTE6,''), coalesce(hb1.USER_NAME,'UNKNOWN') as CREATED_BY_Name, tb1.CREATION_DATE, CURRENCY_CODE, CUST_PO_NUMBER, CUST_PO_NUMBER_REQ_YN, DELETED_YN, tb1.END_DATE, bround(ESTIMATED_AMOUNT_RENEWED,4), coalesce(ATTRIBUTE8,''), INV_ORGANIZATION_ID, ISSUE_OR_RECEIVE, DATE_ISSUED, KEEP_ON_MAIL_LIST, tb1.LAST_UPDATE_DATE,' UNKNOWN' as last_update_login_name , coalesce(hb2.USER_NAME,'UNKNOWN') as last_updated_by_name , coalesce(ATTRIBUTE10,''), ORIG_SYSTEM_ID1, ORIG_SYSTEM_REFERENCE1, ORIG_SYSTEM_SOURCE_CODE, PRE_PAY_REQ_YN, PRICE_LIST_ID, PRICING_DATE, DATE_CLOSE_PROJECTED, DATETIME_PROPOSED, QCL_ID, CHR_ID_RENEWED, CURRENCY_CODE_RENEWED, DATE_RENEWED, CHR_ID_RENEWED_TO, RESOLVED_UNTIL, CHR_ID_RESPONSE, DATETIME_RESPONDED, RESPONSE_COPIES_REQ, SET_ASIDE_PERCENT, SIGN_BY_DATE, DATE_SIGNED, coalesce(ATTRIBUTE12,''), tb1.START_DATE, STS_CODE, SCS_CODE, TEMPLATE_YN, TEMPLATE_USED, TRN_CODE, DATE_TERMINATED, coalesce(ATTRIBUTE11,''), bround(TOTAL_LINE_LIST_PRICE,4), tb1.dtl__capxaction, UPG_ORIG_SYSTEM_REF_ID, UPG_ORIG_SYSTEM_REF, bround(USER_ESTIMATED_AMOUNT,4), coalesce(ATTRIBUTE7,''), coalesce(ATTRIBUTE9,''), coalesce(ATTRIBUTE13,''), BILL_TO_SITE_USE_ID, CONVERSION_RATE, CONVERSION_RATE_DATE, CONVERSION_TYPE, DOCUMENT_ID, INV_RULE_ID, PAYMENT_TERM_ID, RENEWAL_END_DATE, RENEWAL_TYPE_CODE, SHIP_TO_SITE_USE_ID, ATTRIBUTE15, APPROVAL_TYPE, tb1.suspend_credits_flag, tb1.hold_reason_description, tb1.agreement_start_date, tb1.agreement_end_date from (select DTL__CAPXTIMESTAMP,dtl__capxaction,ID,CONTRACT_NUMBER,AUTHORING_ORG_ID,CONTRACT_NUMBER_MODIFIER,CHR_ID_RESPONSE,CHR_ID_AWARD,CHR_ID_RENEWED,INV_ORGANIZATION_ID,STS_CODE,QCL_ID,SCS_CODE,TRN_CODE,CURRENCY_CODE,ARCHIVED_YN,DELETED_YN,TEMPLATE_YN,CHR_TYPE,CREATION_DATE,LAST_UPDATED_BY,CUST_PO_NUMBER_REQ_YN,PRE_PAY_REQ_YN,CUST_PO_NUMBER,TEMPLATE_USED,DATE_APPROVED,DATETIME_CANCELLED,AUTO_RENEW_DAYS,DATE_ISSUED,DATETIME_RESPONDED,KEEP_ON_MAIL_LIST,SET_ASIDE_PERCENT,RESPONSE_COPIES_REQ,DATE_CLOSE_PROJECTED,DATETIME_PROPOSED,DATE_SIGNED,DATE_TERMINATED,DATE_RENEWED,START_DATE,END_DATE,BUY_OR_SELL,ISSUE_OR_RECEIVE,LAST_UPDATE_LOGIN,ESTIMATED_AMOUNT,LAST_UPDATE_DATE,ATTRIBUTE6,ATTRIBUTE7,ATTRIBUTE8,ATTRIBUTE9,ATTRIBUTE10,ATTRIBUTE11,ATTRIBUTE12,ATTRIBUTE13,ATTRIBUTE15,CHR_ID_RENEWED_TO,ESTIMATED_AMOUNT_RENEWED,CURRENCY_CODE_RENEWED,UPG_ORIG_SYSTEM_REF,UPG_ORIG_SYSTEM_REF_ID,RESOLVED_UNTIL,ORIG_SYSTEM_SOURCE_CODE,ORIG_SYSTEM_ID1,ORIG_SYSTEM_REFERENCE1,PRICE_LIST_ID,PRICING_DATE,TOTAL_LINE_LIST_PRICE,SIGN_BY_DATE,USER_ESTIMATED_AMOUNT,CONVERSION_TYPE,CONVERSION_RATE,CONVERSION_RATE_DATE,BILL_TO_SITE_USE_ID,INV_RULE_ID,RENEWAL_TYPE_CODE,RENEWAL_END_DATE,SHIP_TO_SITE_USE_ID,PAYMENT_TERM_ID,DOCUMENT_ID,APPROVAL_TYPE,CREATED_BY,case when ATTRIBUTE14 is NULL then 'N' when trim(ATTRIBUTE14)='' then 'N' else attribute14 end as suspend_credits_flag,attribute5 as hold_reason_description,from_unixtime(unix_timestamp(attribute3, 'dd-MMM-yy'),'yyyy-MM-dd') as agreement_start_date,from_unixtime(unix_timestamp(attribute4, 'dd-MMM-yy'),'yyyy-MM-dd') as agreement_end_date, row_number() over (partition by ID order by DTL__CAPXTIMESTAMP desc,edl_record_sequence desc) as rnk from trans_cfocontroller_erp_okc_erpprod.okc_k_headers_all_b tb1,""" + db_params.TTMMPPDDBB1 + """.""" + db_params.AAPPLLIIDD1EENNVV + """_CONTRACT_HEADER_ML_time QQ1 where tb1.edl_ingest_time > QQ1.start_tm and tb1.edl_ingest_time <= QQ1.end_tm)tb1 LEFT OUTER JOIN QQ2 on tb1.authoring_org_id=QQ2.organization_id LEFT OUTER JOIN hub_common.HUB_REF_FND_USER hb1 on hb1.USER_ID = tb1.CREATED_BY LEFT OUTER JOIN hub_common.HUB_REF_FND_USER hb2 on hb2.USER_ID = tb1. LAST_UPDATED_BY WHERE tb1.rnk=1 """)

        except:
            raise Exception("Error while executing query number {} in the job '{}'.".format(str(counter), "d8tcontractheadermlinssql"))
        finally:
            print("Execution complete for job 'd8tcontractheadermlinssql'.")

def main():
    m = d8tcontractheadermlinssql(sparkSession)
    m.execute()

if __name__ == '__main__':
    global sparkSession
    sparkSession = SparkSession.builder.appName("d8tcontractheadermlinssql").enableHiveSupport().getOrCreate()
    main()